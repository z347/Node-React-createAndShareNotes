{"version":3,"sources":["constants/actionTypes.js","store/actions/Notification.action.js","store/actions/Auth.action.js","layouts/NavBar.jsx","pages/Home.jsx","components/notification/Snackbar.jsx","components/auth/FormRegistration.jsx","store/actions/Registration.action.js","pages/Registration.jsx","store/reducers/Auth.reducer.js","store/reducers/Notification.reducer.js","store/reducers/Notes.reducer.js","store/reducers/Share.reducer.js","store/reducers/Root.reducer.js","helpers/store.js","helpers/autoRedirect.js","components/auth/FormAuth.jsx","pages/Auth.jsx","pages/PageNotFound.jsx","store/actions/Notes.action.js","components/notes/buttons/deleteNotes.jsx","components/notes/buttons/modal/editWindow.jsx","components/notes/buttons/editNotes.jsx","store/actions/Share.action.js","components/notes/buttons/modal/shareWindow.jsx","components/notes/buttons/shareNotes.jsx","components/notes/getNotes.jsx","components/notes/createNotes.jsx","layouts/Main.jsx","pages/UserCabinet.jsx","containers/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Object","freeze","AUTH","authSuccess","logout","NOTIFICATION","getMessageError","getMessageSuccess","clearNotification","NOTES","getNotesSuccess","SHARE","getUsersSuccess","data","message","type","types","messageError","messageSuccess","autoClearNotification","dispatch","setTimeout","sendUserDataToAuth","url","a","fetch","method","cache","headers","body","JSON","stringify","response","json","ok","status","autoLogout","expires","console","error","token","userId","localStorage","setItem","isAuthenticated","time","log","removeItem","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","color","textDecoration","linkTitle","fontSize","connect","userLogout","withRouter","props","classes","state","useSelector","auth","userIsAuth","Button","variant","className","exact","to","role","onClick","event","preventDefault","history","push","userToAuth","AppBar","position","Toolbar","Box","component","m","Home","useEffect","document","Snackbars","notification","useState","open","setOpen","vertical","horizontal","handleClose","reason","snackbar","Snackbar","onClose","anchorOrigin","Alert","severity","formRegistration","textAlign","verticalAlign","margin","width","marginTop","marginBottom","height","display","sendDataToServer","userDataToRegistration","useForm","mode","register","handleSubmit","errors","formState","reset","autoComplete","onSubmit","TextField","id","name","label","inputRef","required","pattern","value","email","minLength","password","confirm","size","disabled","isValid","container","backgroundColor","paper","initialState","notesArray","_id","notes","owner","usersArray","rootReducer","combineReducers","action","users","oldState","serialisedState","getItem","parse","e","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunk","autoRedirect","getState","subscribe","saveState","FormTask","errorMessage","submitHandler","PageNotFound","getAllNotes","Authorization","deleteNotes","notesId","deleteOneNotes","getNotes","deleteHandler","IconButton","aria-label","modal","alignItems","justifyContent","palette","background","border","boxShadow","shadows","padding","minWidth","textarea","float","editNotes","editOneNotes","notesInfo","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TextareaAutosize","rowsMin","defaultValue","ref","startIcon","buttonEdit","shareWithUser","shareWith","samedate","avatar","blue","SimpleDialog","selectedValue","socket","handleListItemClick","emit","Dialog","DialogTitle","List","map","item","ListItem","key","ListItemAvatar","Avatar","ListItemText","primary","getUsers","getAllUsers","setSelectedValue","handleClickOpen","buttonShare","flexDirection","heading","typography","pxToRem","fontWeight","fontWeightRegular","share","alignSelf","arrNotes","length","index","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","gutterBottom","input","paddingRight","sendNotes","sendNewNotes","Grid","justify","direction","publicContent","path","Container","maxWidth","Paper","elevation","privetContent","io","on","info","disconnect","Main","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c0bfae9c.chunk.js","sourcesContent":["module.exports = Object.freeze({\n    AUTH: {\n        authSuccess: 'LOGIN_SUCCESS',\n        logout: 'LOGOUT',\n    },\n    NOTIFICATION: {\n        getMessageError: 'GET_NOTIFICATION_ERROR',\n        getMessageSuccess: 'GET_NOTIFICATION_SUCCESS',\n        clearNotification: 'CLEAR_ALL_NOTIFICATION',\n    },\n    NOTES: {\n        getNotesSuccess: 'GET_NOTES_SUCCESS',\n    },\n    SHARE: {\n        getUsersSuccess: 'GET_USERS_SUCCESS',\n    },\n});\n","import types from '../../constants/actionTypes';\n\nexport function getMessageError(data) {\n    const { message } = data;\n    return {\n        type: types.NOTIFICATION.getMessageError,\n        messageError: message,\n    };\n}\n\nexport function getMessageSuccess(data) {\n    const { message } = data;\n    return {\n        type: types.NOTIFICATION.getMessageSuccess,\n        messageSuccess: message,\n    };\n}\n\nexport function autoClearNotification() {\n    return dispatch => setTimeout(() => dispatch(clearNotification()), 5000);\n}\n\nexport function clearNotification() {\n    return {\n        type: types.NOTIFICATION.clearNotification,\n        messageSuccess: false,\n        messageError: false,\n    };\n}\n","import types from '../../constants/actionTypes';\nimport { getMessageError, clearNotification, autoClearNotification } from './Notification.action';\n\nexport function sendUserDataToAuth(data, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n                body: JSON.stringify(data),\n            });\n            const json = await response.json();\n            dispatch(clearNotification());\n            response.ok && response.status === 200\n                ? dispatch(authSuccess(json)) && dispatch(autoLogout(json.expires))\n                : dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function authSuccess(data) {\n    const { token, userId } = data;\n    localStorage.setItem('userToken', token);\n    return {\n        type: types.AUTH.authSuccess,\n        token,\n        userId,\n        isAuthenticated: true,\n    };\n}\n\nexport function autoLogout(time) {\n    console.log('autoLogout');\n    return dispatch => setTimeout(() => dispatch(logout()), time * 1000);\n    // return dispatch => setTimeout(() => dispatch(logout()), 5000);   // test\n}\n\nexport function logout() {\n    // window.location.replace('/logout');\n    // window.location.replace('/');\n\n    localStorage.removeItem('userToken');\n    return {\n        type: types.AUTH.logout,\n        token: false,\n        userId: false,\n        isAuthenticated: false,\n    };\n}\n","import React, { Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { logout } from '../store/actions/Auth.action';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(2),\n    },\n    a: {\n        color: 'inherit',\n        textDecoration: 'inherit',\n    },\n    linkTitle: {\n        color: 'inherit',\n        textDecoration: 'inherit',\n        fontSize: '1.25rem',\n    },\n}));\n\nfunction NavBar(props) {\n    const classes = useStyles();\n    const state = useSelector(state => state.auth);\n\n    const logoutHandler = event => {\n        event.preventDefault();\n        props.userLogout();\n        props.history.push('/');\n    };\n\n    const userIsAuth = (\n        <Fragment>\n            <Button variant=\"outlined\" color=\"inherit\" className={classes.button}>\n                <Link exact=\"true\" to=\"/cabinet\" role=\"link\" className={classes.a}>\n                    cabinet\n                </Link>\n            </Button>\n            <Button variant=\"outlined\" color=\"inherit\">\n                <Link exact=\"true\" to=\"/\" role=\"link\" className={classes.a} onClick={logoutHandler}>\n                    logout\n                </Link>\n            </Button>\n        </Fragment>\n    );\n\n    const userToAuth = (\n        <Fragment>\n            <Button variant=\"outlined\" color=\"inherit\" className={classes.button}>\n                <Link exact=\"true\" to=\"/login\" role=\"link\" className={classes.a}>\n                    sign in\n                </Link>\n            </Button>\n            <Button variant=\"outlined\" color=\"inherit\">\n                <Link exact=\"true\" to=\"/registration\" role=\"link\" className={classes.a}>\n                    sign up\n                </Link>\n            </Button>\n        </Fragment>\n    );\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Box component=\"h6\" m={1} className={classes.title}>\n                    <Link exact=\"true\" to=\"/\" role=\"link\" className={classes.linkTitle}>\n                        Nerdy Soft\n                    </Link>\n                </Box>\n                {state.isAuthenticated ? userIsAuth : userToAuth}\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        userLogout: () => dispatch(logout()),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(NavBar));\n","import React, { useEffect } from 'react';\n\nfunction Home() {\n    useEffect(() => {\n        document.title = `Nerdy Soft`;\n    });\n\n    return <h1>Home page</h1>;\n}\n\nexport default Home;\n","import React, { Fragment, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default function Snackbars() {\n    const messageError = useSelector(state => state.notification.messageError);\n    const messageSuccess = useSelector(state => state.notification.messageSuccess);\n\n    const [open, setOpen] = useState(true);\n\n    const [state] = useState({\n        vertical: 'top',\n        horizontal: 'center',\n    });\n\n    const { vertical, horizontal } = state;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    };\n\n    const snackbar = (\n        <Snackbar onClose={handleClose} anchorOrigin={{ vertical, horizontal }} open={open}>\n            <Alert onClose={handleClose} variant=\"filled\" severity={messageError ? 'error' : 'success'}>\n                {messageError || messageSuccess}\n            </Alert>\n        </Snackbar>\n    );\n\n    return <Fragment>{messageError || messageSuccess ? snackbar : null}</Fragment>;\n}\n","import React, { Fragment } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { userDataToRegistration } from '../../store/actions/Registration.action';\nimport Snackbar from '../notification/Snackbar';\n\nconst useStyles = makeStyles(theme => ({\n    formRegistration: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        '& > div': {\n            margin: theme.spacing(1),\n            width: '75%',\n        },\n        '& > button': {\n            marginTop: theme.spacing(4),\n            marginBottom: theme.spacing(10),\n            width: '75%',\n            height: '4rem',\n        },\n        '& > div.MuiAlert-root': {\n            display: 'inline-flex',\n            width: '75%',\n        },\n    },\n}));\n\nfunction FormRegistration(props) {\n    const classes = useStyles();\n\n    const message = useSelector(state => {\n        if (state.notification.messageError) return state.notification.messageError;\n        else if (state.notification.messageSuccess) return state.notification.messageSuccess;\n        else return false;\n    });\n\n    const { register, handleSubmit, errors, formState, reset } = useForm({\n        mode: 'onBlur',\n    });\n\n    const submitHandler = (data, event) => {\n        event.preventDefault();\n        reset();\n        props.sendDataToServer(data, '/api/auth/register');\n    };\n\n    return (\n        <Fragment>\n            {message ? <Snackbar /> : null}\n            <form className={classes.formRegistration} autoComplete=\"on\" onSubmit={handleSubmit(submitHandler)}>\n                <TextField\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email address *\"\n                    type=\"email\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        },\n                    })}\n                />\n                {errors.email && errors.email.type === 'required' && <Alert severity=\"error\">Email is required</Alert>}\n                {errors.email && errors.email.type === 'pattern' && <Alert severity=\"error\">Invalid email</Alert>}\n\n                <TextField\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password *\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                        minLength: 6,\n                    })}\n                />\n                {errors.password && errors.password.type === 'required' && (\n                    <Alert severity=\"error\">Password is required</Alert>\n                )}\n                {errors.password && errors.password.type === 'minLength' && (\n                    <Alert severity=\"error\">Min length: 6</Alert>\n                )}\n\n                <TextField\n                    id=\"confirm\"\n                    name=\"confirm\"\n                    label=\"Confirm password *\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                        minLength: 6,\n                    })}\n                />\n                {errors.confirm && errors.confirm.type === 'required' && (\n                    <Alert severity=\"error\">Confirm password is required</Alert>\n                )}\n                {errors.confirm && errors.confirm.type === 'minLength' && <Alert severity=\"error\">Min length: 6</Alert>}\n\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\" disabled={!formState.isValid}>\n                    sing up\n                </Button>\n            </form>\n        </Fragment>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        sendDataToServer: (data, url) => dispatch(userDataToRegistration(data, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(FormRegistration);\n","import { getMessageSuccess, getMessageError, clearNotification, autoClearNotification } from './Notification.action';\n\nexport function userDataToRegistration(data, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(data),\n            });\n            const json = await response.json();\n            dispatch(clearNotification());\n            response.ok && response.status === 201\n                ? dispatch(getMessageSuccess(json)) && dispatch(autoClearNotification())\n                : dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormRegistration from '../components/auth/FormRegistration';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: theme.spacing(5),\n        backgroundColor: '#cfe8fc',\n    },\n    paper: {\n        flexGrow: 1,\n        height: '100%',\n        backgroundColor: 'primary',\n    },\n    title: {\n        margin: theme.spacing(5),\n        marginBottom: theme.spacing(10),\n    },\n}));\n\nexport default function Registration() {\n    const classes = useStyles();\n\n    useEffect(() => {\n        document.title = `Registration page`;\n    });\n\n    return (\n        <Container maxWidth=\"md\">\n            <Typography component=\"main\" className={classes.container}>\n                <Paper className={classes.paper} elevation={2}>\n                    <Grid container justify=\"center\">\n                        <Typography variant=\"h4\" component=\"h2\" gutterBottom className={classes.title}>\n                            Create your account\n                        </Typography>\n\n                        <FormRegistration />\n                    </Grid>\n                </Paper>\n            </Typography>\n        </Container>\n    );\n}\n","import { AUTH } from '../../constants/actionTypes';\n\nconst { authSuccess, logout } = AUTH;\n\nconst initialState = {\n    token: false,\n    userId: false,\n    isAuthenticated: false,\n};\n\nexport default function registrationReducer(state = initialState, action) {\n    switch (action.type) {\n        case authSuccess:\n            return {\n                ...state,\n                token: action.token,\n                userId: action.userId,\n                isAuthenticated: action.isAuthenticated,\n            };\n        case logout:\n            return {\n                ...state,\n                token: false,\n                userId: false,\n                isAuthenticated: false,\n            };\n        default:\n            return state;\n    }\n}\n","import { NOTIFICATION } from '../../constants/actionTypes';\n\nconst { getMessageError, getMessageSuccess, clearNotification } = NOTIFICATION;\n\nconst initialState = {\n    messageError: false,\n    messageSuccess: false,\n};\n\nexport default function notificationReducer(state = initialState, action) {\n    switch (action.type) {\n        case getMessageError:\n            return {\n                ...state,\n                messageError: action.messageError,\n            };\n        case getMessageSuccess:\n            return {\n                ...state,\n                messageSuccess: action.messageSuccess,\n            };\n        case clearNotification:\n            return {\n                ...state,\n                messageSuccess: false,\n                messageError: false,\n            };\n        default:\n            return state;\n    }\n}\n","import { NOTES } from '../../constants/actionTypes';\n\nconst { getNotesSuccess } = NOTES;\n\nconst initialState = {\n    notesArray: [{ _id: 1, notes: 'fake notes', owner: 1 }],\n};\n\nexport default function notesReducer(state = initialState, action) {\n    switch (action.type) {\n        case getNotesSuccess:\n            return {\n                ...state,\n                notesArray: action.notesArray,\n            };\n        default:\n            return state;\n    }\n}\n","import { SHARE } from '../../constants/actionTypes';\n\nconst { getUsersSuccess } = SHARE;\n\nconst initialState = {\n    usersArray: [{ _id: '1', email: 'fake@mail.com' }],\n};\n\nexport default function usersReducer(state = initialState, action) {\n    switch (action.type) {\n        case getUsersSuccess:\n            return {\n                ...state,\n                usersArray: action.usersArray,\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './Auth.reducer';\nimport notificationReducer from './Notification.reducer';\nimport notesReducer from './Notes.reducer';\nimport shareReducer from './Share.reducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    notification: notificationReducer,\n    notes: notesReducer,\n    users: shareReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../store/reducers/Root.reducer';\n\nconst oldState = loadState();\n\nexport const store = createStore(rootReducer, oldState, composeWithDevTools(applyMiddleware(thunk)));\n\n//  Add a change listener to the store, and invoke our saveState function defined above.\nstore.subscribe(() => saveState(store.getState()));\n\n// This function accepts the app state, and saves it to localStorage\nfunction saveState(state) {\n    try {\n        const serialisedState = JSON.stringify(state);\n        localStorage.setItem('app_state', serialisedState);\n    } catch (e) {\n        console.error(e.message);\n    }\n}\n\n// This function checks if the app state is saved in localStorage\nfunction loadState() {\n    try {\n        const serialisedState = localStorage.getItem('app_state');\n        if (!serialisedState) return undefined;\n        return JSON.parse(serialisedState);\n    } catch (e) {\n        return undefined;\n    }\n}\n","import { store } from './store';\n\nexport default function autoRedirect(props) {\n    const { isAuthenticated } = store.getState().auth;\n    isAuthenticated ? props.history.push('/cabinet') : props.history.push('/login');\n}\n","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { sendUserDataToAuth } from '../../store/actions/Auth.action';\nimport Snackbar from '../notification/Snackbar';\nimport autoRedirect from '../../helpers/autoRedirect';\nimport { store } from '../../helpers/store';\n\nconst useStyles = makeStyles(theme => ({\n    FormTask: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        width: '100%',\n        '& > div': {\n            margin: theme.spacing(1),\n            width: '75%',\n        },\n        '& > button': {\n            marginTop: theme.spacing(4),\n            marginBottom: theme.spacing(10),\n            width: '75%',\n            height: '4rem',\n        },\n        '& > div.MuiAlert-root': {\n            display: 'inline-flex',\n            width: '75%',\n        },\n    },\n}));\n\nfunction FormAuth(props) {\n    const classes = useStyles();\n    const errorMessage = store.getState().notification.messageError;\n\n    const { register, handleSubmit, errors, formState, reset } = useForm({\n        mode: 'onBlur',\n    });\n\n    const submitHandler = async (data, event) => {\n        try {\n            event.preventDefault();\n            reset();\n            await store.dispatch(sendUserDataToAuth(data, '/api/auth/login'));\n            autoRedirect(props);\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    return (\n        <Fragment>\n            {errorMessage ? <Snackbar /> : null}\n            <form className={classes.FormTask} autoComplete=\"on\" onSubmit={handleSubmit(submitHandler)}>\n                <TextField\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email address *\"\n                    type=\"email\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        },\n                    })}\n                />\n                {errors.email && errors.email.type === 'required' && <Alert severity=\"error\">Email is required</Alert>}\n                {errors.email && errors.email.type === 'pattern' && <Alert severity=\"error\">Invalid email</Alert>}\n\n                <TextField\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password *\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                        minLength: 6,\n                    })}\n                />\n                {errors.password && errors.password.type === 'required' && (\n                    <Alert severity=\"error\">Password is required</Alert>\n                )}\n                {errors.password && errors.password.type === 'minLength' && (\n                    <Alert severity=\"error\">Min length: 6</Alert>\n                )}\n\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\" disabled={!formState.isValid}>\n                    sing in\n                </Button>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default withRouter(FormAuth);\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormAuth from '../components/auth/FormAuth';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: theme.spacing(5),\n        backgroundColor: '#cfe8fc',\n    },\n    paper: {\n        flexGrow: 1,\n        height: '100%',\n        backgroundColor: 'primary',\n    },\n    title: {\n        margin: theme.spacing(5),\n        marginBottom: theme.spacing(10),\n    },\n}));\n\nexport default function Auth() {\n    const classes = useStyles();\n\n    useEffect(() => {\n        document.title = `Auth page`;\n    });\n\n    return (\n        <Container maxWidth=\"md\">\n            <Typography component=\"main\" className={classes.container}>\n                <Paper className={classes.paper} elevation={2}>\n                    <Grid container justify=\"center\">\n                        <Typography variant=\"h4\" component=\"h2\" gutterBottom className={classes.title}>\n                            Login to the system\n                        </Typography>\n                        <FormAuth />\n                    </Grid>\n                </Paper>\n            </Typography>\n        </Container>\n    );\n}\n","import React, { useEffect } from 'react';\n\nfunction PageNotFound() {\n    useEffect(() => {\n        document.title = `Page not found`;\n    });\n\n    return <h1>Page not found</h1>;\n}\n\nexport default PageNotFound;\n","import types from '../../constants/actionTypes';\nimport { getMessageError, clearNotification, autoClearNotification } from './Notification.action';\n\nexport function getAllNotes(token, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n            });\n            const json = await response.json();\n            dispatch(clearNotification());\n            response.ok && response.status === 200\n                ? dispatch(getNotesSuccess(json))\n                : dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function sendNewNotes(data, url, token) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n                body: JSON.stringify(data),\n            });\n            const json = await response.json();\n            if (!response.ok) {\n                dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function deleteOneNotes(token, notesId, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'DELETE',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                    id: notesId,\n                },\n            });\n            const json = await response.json();\n            if (!response.ok) {\n                dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function editOneNotes(token, notesId, data, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'PATCH',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                    id: notesId,\n                    notes: data,\n                },\n            });\n            const json = await response.json();\n            if (!response.ok) {\n                dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function getNotesSuccess(data) {\n    const { notes } = data;\n    return {\n        type: types.NOTES.getNotesSuccess,\n        notesArray: notes,\n    };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getAllNotes, deleteOneNotes } from '../../../store/actions/Notes.action';\nimport { store } from '../../../helpers/store';\n\nfunction buttonDelete(props) {\n    const { notesId } = props;\n    const token = store.getState().auth.token;\n\n    const deleteHandler = async event => {\n        try {\n            event.preventDefault();\n            await props.deleteNotes(token, notesId, '/api/notes/delete');\n            await props.getNotes(token, '/api/notes');\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    return (\n        <IconButton aria-label=\"delete\" onClick={deleteHandler}>\n            <DeleteIcon />\n        </IconButton>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        deleteNotes: (token, notesId, url) => dispatch(deleteOneNotes(token, notesId, url)),\n        getNotes: (token, url) => dispatch(getAllNotes(token, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(buttonDelete);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { editOneNotes, getAllNotes } from '../../../../store/actions/Notes.action';\nimport { store } from '../../../../helpers/store';\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        minWidth: '500px',\n    },\n    textarea: {\n        width: '100%',\n    },\n    button: {\n        float: 'right',\n        marginTop: '25px',\n    },\n}));\n\nfunction TransitionsModal(props) {\n    const { notesInfo } = props;\n    const token = store.getState().auth.token;\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const { register, handleSubmit } = useForm({\n        mode: 'onBlur',\n    });\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const submitHandler = async (data, event) => {\n        try {\n            event.preventDefault();\n            await props.editNotes(token, notesInfo._id, data.notes, '/api/notes/edit');\n            await props.getNotes(token, '/api/notes');\n            handleClose();\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    return (\n        <Fragment>\n            <EditIcon onClick={handleOpen} />\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">Edit notes:</h2>\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(submitHandler)}>\n                            <TextareaAutosize\n                                id=\"notes\"\n                                name=\"notes\"\n                                rowsMin={10}\n                                className={classes.textarea}\n                                defaultValue={notesInfo.notes}\n                                ref={register}\n                            />\n                            <div>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<SaveIcon />}\n                                    type=\"submit\"\n                                >\n                                    Save\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Fade>\n            </Modal>\n        </Fragment>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        editNotes: (token, notesId, data, url) => dispatch(editOneNotes(token, notesId, data, url)),\n        getNotes: (token, url) => dispatch(getAllNotes(token, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TransitionsModal);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditModal from './modal/editWindow';\n\nfunction buttonEdit(props) {\n    const { notesInfo } = props;\n\n    return (\n        <IconButton aria-label=\"edit\">\n            <EditModal notesInfo={notesInfo} />\n        </IconButton>\n    );\n}\n\nexport default buttonEdit;\n","import types from '../../constants/actionTypes';\nimport { autoClearNotification, clearNotification, getMessageError, getMessageSuccess } from './Notification.action';\n\nexport function getAllUsers(token, url) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n            });\n            const json = await response.json();\n            dispatch(clearNotification());\n            response.ok && response.status === 200\n                ? dispatch(getUsersSuccess(json))\n                : dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function shareWithUser(token, url, shareWith, notesId) {\n    return async dispatch => {\n        try {\n            const response = await fetch(url, {\n                method: 'PATCH',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                    samedate: shareWith + ' ' + notesId,\n                },\n            });\n            const json = await response.json();\n            dispatch(clearNotification());\n            response.ok && response.status === 200\n                ? dispatch(getMessageSuccess(json)) && dispatch(autoClearNotification())\n                : dispatch(getMessageError(json)) && dispatch(autoClearNotification());\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n}\n\nexport function getUsersSuccess(data) {\n    const { users } = data;\n    return {\n        type: types.SHARE.getUsersSuccess,\n        usersArray: users,\n    };\n}\n","import React, { Fragment, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { blue } from '@material-ui/core/colors';\nimport { getAllUsers } from '../../../../store/actions/Share.action';\nimport { store } from '../../../../helpers/store';\nimport { shareWithUser } from '../../../../store/actions/Share.action';\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\nfunction SimpleDialog(props) {\n    const token = useSelector(state => state.auth.token);\n\n    const classes = useStyles();\n    const { onClose, selectedValue, open, notesId, socket } = props;\n    const users = useSelector(state => state.users.usersArray);\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = async email => {\n        try {\n            await store.dispatch(shareWithUser(token, '/api/share/notes', email, notesId));\n            socket.emit('share notes with user', email);\n            onClose(email);\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Click and share:</DialogTitle>\n            <List>\n                {users.map(item => (\n                    <ListItem button onClick={() => handleListItemClick(item.email)} key={item._id}>\n                        <ListItemAvatar>\n                            <Avatar className={classes.avatar}>\n                                <PersonIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={item.email} />\n                    </ListItem>\n                ))}\n            </List>\n        </Dialog>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nfunction SimpleDialogDemo(props) {\n    const token = useSelector(state => state.auth.token);\n    const users = useSelector(state => state.users.usersArray);\n\n    const { notesId, socket } = props;\n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(users[0].email);\n\n    const handleClickOpen = async () => {\n        try {\n            setOpen(true);\n            await props.getUsers(token, '/api/share/users');\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    const handleClose = value => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <Fragment>\n            <ShareIcon onClick={handleClickOpen} />\n            <SimpleDialog\n                notesId={notesId}\n                socket={socket}\n                selectedValue={selectedValue}\n                open={open}\n                onClose={handleClose}\n            />\n        </Fragment>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getUsers: (token, url) => dispatch(getAllUsers(token, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(SimpleDialogDemo);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareWindow from './modal/shareWindow';\n\nexport default function buttonShare(props) {\n    const { notesId, socket } = props;\n    return (\n        <IconButton aria-label=\"share\">\n            <ShareWindow notesId={notesId} socket={socket} />\n        </IconButton>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport { getAllNotes } from '../../store/actions/Notes.action';\nimport ButtonDelete from './buttons/deleteNotes';\nimport ButtonEdit from './buttons/editNotes';\nimport ButtonShare from './buttons/shareNotes';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginBottom: '100px',\n\n        '& div.MuiExpansionPanelDetails-root': {\n            flexDirection: 'column',\n\n            '& > div': {\n                marginTop: '40px',\n                display: 'flex',\n                flexDirection: 'row-reverse',\n            },\n        },\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    title: {\n        textAlign: 'center',\n    },\n    share: {\n        flexGrow: 1,\n        alignSelf: 'flex-end',\n        fontWeight: 400,\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n}));\n\nfunction GetNotes(props) {\n    const classes = useStyles();\n\n    const token = useSelector(state => state.auth.token);\n    const arrNotes = useSelector(state => state.notes.notesArray);\n\n    useEffect(() => {\n        try {\n            (async function getNotes() {\n                await props.getNotes(token, '/api/notes');\n            })();\n        } catch (e) {\n            console.error(e.message);\n        }\n    }, [props, token]);\n\n    let notes =\n        arrNotes.length > 0 ? (\n            arrNotes.map((item, index) => {\n                return (\n                    <ExpansionPanel key={item._id}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls={item._id + '-content'}\n                            id={item._id + '-header'}\n                        >\n                            {item.email ? (\n                                <Typography className={classes.heading}> Notes № {index + 1} || Public </Typography>\n                            ) : (\n                                <Typography className={classes.heading}> Notes № {index + 1} || Private </Typography>\n                            )}\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>{item.notes}</Typography>\n                            <div>\n                                <ButtonDelete notesId={item._id} />\n                                <ButtonEdit notesInfo={item} />\n                                <ButtonShare notesId={item._id} socket={props.socket} />\n\n                                {item.email ? (\n                                    <Typography variant=\"subtitle1\" gutterBottom className={classes.share}>\n                                        share: {item.email}\n                                    </Typography>\n                                ) : null}\n                            </div>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                );\n            })\n        ) : (\n            <h3 className={classes.title}>Notes is empty.</h3>\n        );\n\n    return <div className={classes.root}>{notes}</div>;\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getNotes: (token, url) => dispatch(getAllNotes(token, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(GetNotes);\n","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { sendNewNotes, getAllNotes } from '../../store/actions/Notes.action';\n\nconst useStyles = makeStyles(() => ({\n    FormTask: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        width: '80%',\n        margin: '50px auto',\n    },\n    input: {\n        paddingRight: '20px',\n        flexGrow: 1,\n    },\n}));\n\nfunction CreateNotes(props) {\n    const classes = useStyles();\n\n    const token = useSelector(state => state.auth.token);\n\n    const { register, handleSubmit, formState, reset } = useForm({\n        mode: 'onBlur',\n    });\n\n    const submitHandler = async (data, event) => {\n        try {\n            event.preventDefault();\n            reset();\n            await props.sendNotes(data, '/api/notes/create', token);\n            await props.getNotes(token, '/api/notes');\n        } catch (e) {\n            console.error(e.message);\n        }\n    };\n\n    return (\n        <form className={classes.FormTask} autoComplete=\"off\" onSubmit={handleSubmit(submitHandler)}>\n            <Grid container justify=\"space-between\" direction=\"row\">\n                <TextField\n                    className={classes.input}\n                    id=\"notes\"\n                    name=\"notes\"\n                    label=\"New notes\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    inputRef={register({\n                        required: true,\n                    })}\n                />\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\" disabled={!formState.isValid}>\n                    add\n                </Button>\n            </Grid>\n        </form>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        sendNotes: (data, url, token) => dispatch(sendNewNotes(data, url, token)),\n        getNotes: (token, url) => dispatch(getAllNotes(token, url)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateNotes);\n","import React, { Fragment } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Home from '../pages/Home';\nimport RegistrationPage from '../pages/Registration';\nimport AuthenticationPage from '../pages/Auth';\nimport PageNotFound from '../pages/PageNotFound';\nimport UserCabinet from '../pages/UserCabinet';\n\nconst publicContent = (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/registration\" component={RegistrationPage} />\n        <Route exact path=\"/login\" component={AuthenticationPage} />\n        <Route component={PageNotFound} />\n    </Switch>\n);\n\nconst privetContent = (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/cabinet\" component={UserCabinet} />\n        <Route component={PageNotFound} />\n    </Switch>\n);\n\nfunction Main() {\n    const state = useSelector(state => state.auth);\n\n    return <Fragment>{state.isAuthenticated ? privetContent : publicContent}</Fragment>;\n}\n\nexport default Main;\n","import io from 'socket.io-client';\nimport React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '../components/notification/Snackbar';\nimport TableNotes from '../components/notes/getNotes';\nimport InputTask from '../components/notes/createNotes';\nimport { getAllNotes } from '../store/actions/Notes.action';\nimport { store } from '../helpers/store';\n\nexport default function UserCabinet() {\n    const messageError = useSelector(state => state.notification.messageError);\n    const token = useSelector(state => state.auth.token);\n\n    let socket = io('http://localhost:3000');\n    socket.on('connect', () => console.info(`Your ID: ${socket.id}`));\n    socket.on('share success', async () => await store.dispatch(getAllNotes(token, '/api/notes')));\n\n    useEffect(() => {\n        document.title = `User cabinet`;\n    });\n\n    useEffect(() => {\n        return () => {\n            socket.disconnect(console.info(`You left: ${socket.id}`));\n        };\n    }, [socket]);\n\n    return (\n        <Container maxWidth=\"md\">\n            {messageError ? <Snackbar /> : null}\n            <InputTask />\n            <TableNotes socket={socket} />\n        </Container>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport NavBar from '../layouts/NavBar';\nimport Main from '../layouts/Main';\nimport 'typeface-roboto';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <CssBaseline />\n            <NavBar />\n            <Main />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { store } from './helpers/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}